// This file is auto-generated by @hey-api/openapi-ts

export const HTTPValidationErrorSchema = {
	properties: {
		detail: {
			items: {
				$ref: '#/components/schemas/ValidationError'
			},
			type: 'array',
			title: 'Detail'
		}
	},
	type: 'object',
	title: 'HTTPValidationError'
} as const;

export const LoginRequestSchema = {
	properties: {
		email: {
			type: 'string',
			title: 'Email'
		},
		password: {
			type: 'string',
			title: 'Password'
		}
	},
	type: 'object',
	required: ['email', 'password'],
	title: 'LoginRequest'
} as const;

export const LoginResponseSchema = {
	properties: {
		user: {
			$ref: '#/components/schemas/UserResponse'
		}
	},
	type: 'object',
	required: ['user'],
	title: 'LoginResponse'
} as const;

export const RegisterRequestSchema = {
	properties: {
		email: {
			type: 'string',
			format: 'email',
			title: 'Email'
		},
		password: {
			type: 'string',
			title: 'Password'
		},
		first_name: {
			type: 'string',
			title: 'First Name'
		},
		last_name: {
			type: 'string',
			title: 'Last Name'
		},
		ssn: {
			type: 'string',
			title: 'Ssn'
		}
	},
	type: 'object',
	required: ['email', 'password', 'first_name', 'last_name', 'ssn'],
	title: 'RegisterRequest'
} as const;

export const RegisterResponseSchema = {
	properties: {
		user: {
			$ref: '#/components/schemas/UserResponse'
		}
	},
	type: 'object',
	required: ['user'],
	title: 'RegisterResponse'
} as const;

export const UserResponseSchema = {
	properties: {
		id: {
			type: 'string',
			format: 'uuid',
			title: 'Id'
		},
		email: {
			type: 'string',
			title: 'Email'
		},
		admin_level: {
			type: 'integer',
			title: 'Admin Level'
		},
		first_name: {
			type: 'string',
			title: 'First Name'
		},
		last_name: {
			type: 'string',
			title: 'Last Name'
		},
		ssn: {
			type: 'string',
			title: 'Ssn'
		},
		balance: {
			type: 'number',
			title: 'Balance'
		},
		iban: {
			type: 'string',
			title: 'Iban'
		}
	},
	type: 'object',
	required: ['id', 'email', 'admin_level', 'first_name', 'last_name', 'ssn', 'balance', 'iban'],
	title: 'UserResponse'
} as const;

export const ValidationErrorSchema = {
	properties: {
		loc: {
			items: {
				anyOf: [
					{
						type: 'string'
					},
					{
						type: 'integer'
					}
				]
			},
			type: 'array',
			title: 'Location'
		},
		msg: {
			type: 'string',
			title: 'Message'
		},
		type: {
			type: 'string',
			title: 'Error Type'
		}
	},
	type: 'object',
	required: ['loc', 'msg', 'type'],
	title: 'ValidationError'
} as const;
